[{"/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/index.js":"1","/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/App.js":"2","/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/Form.js":"3"},{"size":255,"mtime":1695022896759,"results":"4","hashOfConfig":"5"},{"size":156,"mtime":1695080099757,"results":"6","hashOfConfig":"5"},{"size":3326,"mtime":1695079919090,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v6ffwv",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},"/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/index.js",[],[],"/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/App.js",["19"],[],"/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/Form.js",["20","21","22","23","24","25","26","27","28","29"],[],"import React,{useState} from \"react\";\nimport \"./Form.css\"\n\nfunction Form(){\n    let [username,setUsername] = useState(\"\");\n    let [cardnumber,setCardNumber] = useState(\"\");\n    let [month,setMonth] = useState(\"\");\n    let [year,setYear] = useState(\"\");\n    let [cvc,setCvc] = useState(\"\");\n    let [error,setError]=useState(false);\n    \n    function isValid(regex,string){\n        return regex.test(string)\n    }\n    \n    function handleSubmit(e){\n          e.preventDefault();\n          if(username==0||cardnumber==0||month==0||year==0||cvc==0){\n            setError(true);\n          }\n    }\n \n    return(\n        <div className=\"main\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"gapp\">\n                    <p>CARDHOLDER NAME</p>\n                    <input className=\"inputbox cardname\" type=\"text\" placeholder=\"e.g. Jane Appleseed\" \n                    onChange={(e)=>{setUsername(e.target.value);}}>\n                    </input>\n                    {(error && username.length==0)?<p className=\"warningMsg\">CardHolder Name Required</p>:\"\"}\n                    {(!isValid(/^[a-zA-Z]*$/,username))?<p className=\"warningMsg\">Only Alphabets are allowed</p>:\"\"}\n                </div>\n\n\n                <div className=\"gapp\">\n                    <p>CARD NUMBER</p>\n                    <input className=\"inputbox cardnumber\" type=\"number\" placeholder=\"e.g. 1234 5678 9123 0000\" onChange={(e)=>setCardNumber(e.target.value)}>\n                    </input>\n                    {(error&&cardnumber.length==0)?<p className=\"warningMsg\">Card number required</p>:\"\"}\n                    {(!isValid(/^(?:\\d{16})?$/,cardnumber))?<p className=\"warningMsg\">Enter 16 digit Valid Card Number</p>:\"\"}\n                </div>\n\n\n                <div className=\"date gapp\">\n                    <div className=\"datediv\">\n                        <p>EXP.DATE (MM/YY)</p>\n                        <div className=\"dateMMYY\">\n                            <input className=\"inputbox dateinput\" placeholder=\"MM\" type=\"number\" onChange={(e)=>setMonth(e.target.value)}></input>\n                            <input className=\"inputbox dateinput\" placeholder=\"YY\" type=\"number\" onChange={(e)=>setYear(e.target.value)}></input>\n                        </div>\n                        {(error&& month.length==0 && year.length==0)?<p className=\"warningMsg\">Expiry Date required</p>:\"\"}\n                        {(!isValid(/^(0[1-9]|1[0-2])$|^ *$/,month))?<p className=\"warningMsg\">Enter Valid Month</p>:\"\"}\n                        {(!isValid(/^(0[1-9]|[1-9][0-9])$|^ *$/,year))? <p className=\"warningMsg\">Enter Valid Year</p>:\"\"}\n                </div>\n\n\n                    <div className=\"cvvdiv\">\n                        <p>CVC</p>\n                        <input className=\"inputbox cvvinput\" placeholder=\"e.g. 123\" type=\"number\" onChange={(e)=>setCvc(e.target.value)}></input>\n                        {(error&& cvc.length==0)?<p className=\"warningMsg\">CVC is required</p>:\"\"}\n                        {(!isValid(/^\\d{3}$|^$/,cvc))?<p className=\"warningMsg\">CVC must be 3 digit number</p>:\"\"}\n                    </div>\n                </div>\n\n\n                <div className=\"gapp\">\n                    <button className=\"btn\">Confirm</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Form;",[],{"ruleId":"30","severity":1,"message":"31","line":1,"column":15,"nodeType":"32","messageId":"33","endLine":1,"endColumn":23},{"ruleId":"34","severity":1,"message":"35","line":18,"column":22,"nodeType":"36","messageId":"37","endLine":18,"endColumn":24},{"ruleId":"34","severity":1,"message":"35","line":18,"column":37,"nodeType":"36","messageId":"37","endLine":18,"endColumn":39},{"ruleId":"34","severity":1,"message":"35","line":18,"column":47,"nodeType":"36","messageId":"37","endLine":18,"endColumn":49},{"ruleId":"34","severity":1,"message":"35","line":18,"column":56,"nodeType":"36","messageId":"37","endLine":18,"endColumn":58},{"ruleId":"34","severity":1,"message":"35","line":18,"column":64,"nodeType":"36","messageId":"37","endLine":18,"endColumn":66},{"ruleId":"34","severity":1,"message":"35","line":31,"column":47,"nodeType":"36","messageId":"37","endLine":31,"endColumn":49},{"ruleId":"34","severity":1,"message":"35","line":40,"column":47,"nodeType":"36","messageId":"37","endLine":40,"endColumn":49},{"ruleId":"34","severity":1,"message":"35","line":52,"column":47,"nodeType":"36","messageId":"37","endLine":52,"endColumn":49},{"ruleId":"34","severity":1,"message":"35","line":52,"column":65,"nodeType":"36","messageId":"37","endLine":52,"endColumn":67},{"ruleId":"34","severity":1,"message":"35","line":61,"column":45,"nodeType":"36","messageId":"37","endLine":61,"endColumn":47},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]