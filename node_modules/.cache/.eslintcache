[{"/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/index.js":"1","/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/App.js":"2","/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/components/Form.js":"3","/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/components/FrontCard.js":"4","/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/components/BackCard.js":"5"},{"size":256,"mtime":1695177179136,"results":"6","hashOfConfig":"7"},{"size":1163,"mtime":1695177046182,"results":"8","hashOfConfig":"7"},{"size":4548,"mtime":1695178332989,"results":"9","hashOfConfig":"7"},{"size":2110,"mtime":1695177451044,"results":"10","hashOfConfig":"7"},{"size":324,"mtime":1695174394880,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v6ffwv",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/index.js",[],[],"/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/App.js",[],[],"/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/components/Form.js",["28","29","30","31","32","33","34","35","36","37","38"],[],"import React,{useState} from \"react\";\nimport \"./Form.css\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction Form({username,setUsername,cardnumber,setCardNumber,month,setMonth,year,setYear,cvc,setCvc,error,setError,confirm,setConfirm}){\n    // let [username,setUsername] = useState(\"\");\n    // let [cardnumber,setCardNumber] = useState(\"\");\n    // let [month,setMonth] = useState(\"\");\n    // let [year,setYear] = useState(\"\");\n    // let [cvc,setCvc] = useState(\"\");\n    // let [error,setError]=useState(false);\n    // let [confirm,setConfirm]=useState(false);\n    \n    function isValid(regex,string){\n        return regex.test(string)\n    }\n    \n    function handleSubmit(e){\n          e.preventDefault();\n          if(username.length==0||cardnumber.length==0||month.length==0||year.length==0||cvc.length==0){\n            setError(true);\n          }\n          if(isValid(/^[A-Za-z\\s]+$/,username) && isValid(/^(?:\\d{16})?$/,cardnumber) && isValid(/^(0[1-9]|1[0-2])$|^ *$/,month) && isValid(/^(0[0-9]|[1-9][0-9])$|^ *$/,year) && isValid(/^\\d{3}$|^$/,cvc)){\n                 setConfirm(true);\n                 toast.success('Success!', {\n                    position: \"top-center\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"light\",\n                    });\n          } \n    }\n\n    return(\n            <>\n              <form onSubmit={handleSubmit} className=\"form\">\n                <div className=\"gapp\">\n                    <p>CARDHOLDER NAME</p>\n                    <input className=\"inputbox cardname\" type=\"text\" placeholder=\"e.g. Jane Appleseed\" \n                    onChange={(e)=>{setUsername(e.target.value);}}>\n                    </input>\n                    {(error && username.length==0)?<p className=\"warningMsg\">CardHolder Name Required</p>:\"\"}\n                    {(!isValid(/^[a-zA-Z\\s]*$/,username))?<p className=\"warningMsg\">Name can contain only alphabets</p>:\"\"}\n                </div>\n\n\n                <div className=\"gapp\">\n                    <p>CARD NUMBER</p>\n                    <input className=\"inputbox cardnumber\" type=\"number\" placeholder=\"e.g. 1234 5678 9123 0000\" onChange={(e)=>setCardNumber(e.target.value)}>\n                    </input>\n                    {(error && cardnumber.length==0)?<p className=\"warningMsg\">Card number required</p>:\"\"}\n                    {(!isValid(/^(?:\\d{16})?$/,cardnumber))?<p className=\"warningMsg\">Enter 16 digit Valid Card Number</p>:\"\"}\n                </div>\n\n\n                <div className=\"date gapp\">\n                    <div className=\"datediv\">\n                        <p>EXP.DATE(MM/YY)</p>\n                        <div className=\"dateMMYY\">\n                            <input className=\"inputbox dateinput\" placeholder=\"MM\" type=\"number\" onChange={(e)=>setMonth(e.target.value)}></input>\n                            <input className=\"inputbox dateinput\" placeholder=\"YY\" type=\"number\" onChange={(e)=>setYear(e.target.value)}></input>\n                        </div>\n                        {(error && month.length==0 && year.length==0)?<p className=\"warningMsg\">Expiry Date required</p>:\"\"}\n                        {(!isValid(/^(0[1-9]|1[0-2])$|^ *$/,month))?<p className=\"warningMsg\">Enter Valid Month(2 digits)</p>:\"\"}\n                        {(!isValid(/^(0[0-9]|[1-9][0-9])$|^ *$/,year))? <p className=\"warningMsg\">Enter Valid Year(2 digits)</p>:\"\"}\n                </div>\n\n\n                    <div className=\"cvvdiv\">\n                        <p>CVC</p>\n                        <input className=\"inputbox cvvinput\" placeholder=\"e.g. 123\" type=\"number\" onChange={(e)=>setCvc(e.target.value)}></input>\n                        {(error && cvc.length==0)?<p className=\"warningMsg\">CVC is required</p>:\"\"}\n                        {(!isValid(/^\\d{3}$|^$/,cvc))?<p className=\"warningMsg\">CVC must be 3 digit number</p>:\"\"}\n                    </div>\n                </div>\n\n\n                <div className=\"gapp\">\n                    <button className=\"btn\">Confirm</button>\n                </div>\n            </form>\n            <ToastContainer\n               position=\"top-center\"\nautoClose={5000}\nhideProgressBar={false}\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\ntheme=\"light\"\n            />\n            </>\n    );\n}\n\nexport default Form;","/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/components/FrontCard.js",[],[],"/home/shivam/Desktop/WEBdev/REACT/Credit-Card_Generator/src/components/BackCard.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":1,"column":15,"nodeType":"41","messageId":"42","endLine":1,"endColumn":23},{"ruleId":"43","severity":1,"message":"44","line":22,"column":29,"nodeType":"45","messageId":"46","endLine":22,"endColumn":31},{"ruleId":"43","severity":1,"message":"44","line":22,"column":51,"nodeType":"45","messageId":"46","endLine":22,"endColumn":53},{"ruleId":"43","severity":1,"message":"44","line":22,"column":68,"nodeType":"45","messageId":"46","endLine":22,"endColumn":70},{"ruleId":"43","severity":1,"message":"44","line":22,"column":84,"nodeType":"45","messageId":"46","endLine":22,"endColumn":86},{"ruleId":"43","severity":1,"message":"44","line":22,"column":99,"nodeType":"45","messageId":"46","endLine":22,"endColumn":101},{"ruleId":"43","severity":1,"message":"44","line":48,"column":47,"nodeType":"45","messageId":"46","endLine":48,"endColumn":49},{"ruleId":"43","severity":1,"message":"44","line":57,"column":49,"nodeType":"45","messageId":"46","endLine":57,"endColumn":51},{"ruleId":"43","severity":1,"message":"44","line":69,"column":48,"nodeType":"45","messageId":"46","endLine":69,"endColumn":50},{"ruleId":"43","severity":1,"message":"44","line":69,"column":66,"nodeType":"45","messageId":"46","endLine":69,"endColumn":68},{"ruleId":"43","severity":1,"message":"44","line":78,"column":46,"nodeType":"45","messageId":"46","endLine":78,"endColumn":48},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]